#=================================================
# HelmiWrt OS by helmiau.com
#=================================================

name: Uploading Assets

on:
  workflow_dispatch:
  #schedule:
  #  - cron: 0 17 * * *
  # watch:
  #   types: started

jobs:
  Download:
    runs-on: ubuntu-20.04

    steps:
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install wget
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Jakarta /etc/localtime
          docker image prune -a -f
          df -hT $PWD
          mkdir -p $GITHUB_WORKSPACE/kerjain
          cd $GITHUB_WORKSPACE/kerjain
          echo "WORK_PATH=$PWD" >> $GITHUB_ENV
          echo "::set-output name=WORK_PATH::$(echo $PWD)"

      - name: Checkout
        uses: actions/checkout@main

      - name: Downloading HelmiWrt Immortal Releases
        id: download
        run: |
          [ ! -d $GITHUB_WORKSPACE/kerjain ] && mkdir -p $GITHUB_WORKSPACE/kerjain
          cd $GITHUB_WORKSPACE/kerjain
          echo -e "$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | grep browser_download_url | sed -e 's/ //g' -e 's|\"||g' -e 's|browser_download_url:||g' | grep helmiwrt-)" > dl.txt
          wget -i dl.txt

      - name: Checking Files
        id: checkfiles
        run: |
          export BUILD_TAG=$(curl -sL https://api.github.com/repos/helmiau/HelmiWrt-OS-Immortal/releases | jq -r 'first | .tag_name' | sed 's/helmiwrt-//g')
          echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE/kerjain
          echo -e "=== helmilog: Below is work/kerjain contents.. ==="
          ls -R
          echo -e "=== helmilog: Upper is work/kerjain contents.. ==="

      - name: Deploy Files To Release
        uses: ncipollo/release-action@v1.8.0
        if: env.FIRMWARE_RELEASE_UPLOAD == 'true'
        with:
          name: HelmiWrt OS ${{ env.BUILD_DATE }}
          prerelease: true
          allowUpdates: true
          replacesArtifacts: true
          tag: helmiwrt-${{ env.BUILD_DATE }}
          body: ${{ env.BUILD_DATE }}
          commit: ${{ env.CURRENT_BRANCH }}
          token: ${{ secrets.HELMIWRT_RW }}
          artifacts: ${{ env.WORK_PATH }}/kerjain/*
